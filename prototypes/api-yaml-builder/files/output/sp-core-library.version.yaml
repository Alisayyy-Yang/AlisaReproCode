pageSchema: class
pageId: sp-core-library.version
title: Version class
package: sp-core-library
deprecatedMessage: []
betaWarning: ''
summary:
  - elementKind: text
    text: >-
      This class represents versions that follow the string format of MAJOR.MINOR[.PATCH[.REVISION]] where MAJOR, MINOR,
      PATCH and REVISION are integers. PATCH and REVISION are optional. Leading zeros are allowed, but have no meaning
      in comparisons. Examples: 1.0, 1.0.0, 1.0.0.0, 1.01, 01.02.03, 001.002.003.004
remarks: []
extends: []
implements: []
propertiesTable: []
methodsTable:
  - methodColumn:
      - elementKind: codeLink
        linkedPageId: sp-core-library.version.compare
        text: 'compare(v1, v2)'
    accessModifierColumn:
      - elementKind: text
        text: public
    returnsColumn:
      - elementKind: text
        text: number
    descriptionColumn:
      - elementKind: text
        text: Compares two Version classes
    isDeprecated: false
    isBeta: false
    isStatic: true
  - methodColumn:
      - elementKind: codeLink
        linkedPageId: sp-core-library.version.equals
        text: equals(compareWith)
    accessModifierColumn:
      - elementKind: text
        text: public
    returnsColumn:
      - elementKind: text
        text: boolean
    descriptionColumn:
      - elementKind: text
        text: >-
          Checks if this version is equal to the input parameter. Missing patch number is treated as zero. Examples:
          1.0.0 equals 1.0.0 -> true 2.0.1 equals 2.0.0 -> false 3.0 equals 3.0.0 -> true 04.01 equals 4.1 -> true
    isDeprecated: false
    isBeta: false
    isStatic: false
  - methodColumn:
      - elementKind: codeLink
        linkedPageId: sp-core-library.version.greaterthan
        text: greaterThan(compareWith)
    accessModifierColumn:
      - elementKind: text
        text: public
    returnsColumn:
      - elementKind: text
        text: boolean
    descriptionColumn:
      - elementKind: text
        text: >-
          Checks if this version is greater (i.e. newer) than the input parameter. Missing patch number is treated as
          zero Examples: 1.0.0 greaterThan 0.0.9 -> true 2.0 greaterThan 2.0.0 -> false 3.0.1 greaterThan 3.0 -> true
    isDeprecated: false
    isBeta: false
    isStatic: false
  - methodColumn:
      - elementKind: codeLink
        linkedPageId: sp-core-library.version.isvalid
        text: isValid(versionString)
    accessModifierColumn:
      - elementKind: text
        text: public
    returnsColumn:
      - elementKind: text
        text: boolean
    descriptionColumn:
      - elementKind: text
        text: Indicates whether a version string is valid
    isDeprecated: false
    isBeta: false
    isStatic: true
  - methodColumn:
      - elementKind: codeLink
        linkedPageId: sp-core-library.version.lessthan
        text: lessThan(compareWith)
    accessModifierColumn:
      - elementKind: text
        text: public
    returnsColumn:
      - elementKind: text
        text: boolean
    descriptionColumn:
      - elementKind: text
        text: >-
          Checks if this version is less (i.e. older) than the input parameter. Missing patch number is treated as zero
          Examples: 0.9.9 lessThan 1.0.0 -> true 2.0 lessThan 2.0.0 -> false 3.0 lessThan 3.0.1 -> true 04.01 lessThan
          4.1 -> false
    isDeprecated: false
    isBeta: false
    isStatic: false
  - methodColumn:
      - elementKind: codeLink
        linkedPageId: sp-core-library.version.parse
        text: parse(versionString)
    accessModifierColumn:
      - elementKind: text
        text: public
    returnsColumn:
      - elementKind: text
        text: Version
    descriptionColumn:
      - elementKind: text
        text: >-
          Constructs a new Version instance using the version string. tryParse validates the input version string and
          throws error if it is invalid
    isDeprecated: false
    isBeta: false
    isStatic: true
  - methodColumn:
      - elementKind: codeLink
        linkedPageId: sp-core-library.version.satisfies
        text: satisfies(compareWith)
    accessModifierColumn:
      - elementKind: text
        text: public
    returnsColumn:
      - elementKind: text
        text: boolean
    descriptionColumn:
      - elementKind: text
        text: >-
          Checks if this version satisfies the input parameter, therefore it's backwards compatible. They have to share
          the same major version, and the input parameter must be an equal or more recent version. Examples: 1.0.0
          satisfies 1.0.0 -> true 1.1.0 satisfies 1.0.0 -> true 2.0.0 satisfies 1.0.0 -> false 1.0.0 satisfies 1.1.0 ->
          false
    isDeprecated: false
    isBeta: false
    isStatic: false
  - methodColumn:
      - elementKind: codeLink
        linkedPageId: sp-core-library.version.tryparse
        text: tryParse(versionString)
    accessModifierColumn:
      - elementKind: text
        text: public
    returnsColumn:
      - elementKind: text
        text: Version | undefined
    descriptionColumn:
      - elementKind: text
        text: Tries to construct a new Version instance using the version string. Returns undefined if not successful.
    isDeprecated: false
    isBeta: false
    isStatic: true
